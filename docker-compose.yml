zookeeper:
  image: confluent/zookeeper
  hostname: zookeeper
  ports:
    - '2181:2181'

kafka:
  image: confluent/kafka:0.9.0.0-cp1
  hostname: kafka
  ports:
    - '9092:9092'
  links:
    - zookeeper
  environment:
    - KAFKA_LOG_CLEANUP_POLICY=compact

schema-registry:
  image: confluent/schema-registry
  hostname: schema-registry
  ports:
    - '48081:8081'
  links:
    - zookeeper
    - kafka
  environment:
    - SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL=none

postgres:
  image: confluent/postgres-bw:0.1
  hostname: postgres
  ports:
    - 5432

bottledwater-json:
  image: confluent/bottledwater:0.1
  hostname: bottledwater-json
  links:
    - postgres
    - kafka
    - schema-registry

bottledwater:
    image: confluent/bottledwater:0.1
    links:
        - kafka
        - postgres
        - schema-registry

consumer:
    image: confluent/tools
    entrypoint: ['/confluent-tools.sh', 'kafka-avro-console-consumer']
    links:
        - zookeeper
        - kafka
        - schema-registry

nginx:
  image: jwilder/nginx-proxy
  ports:
    - '80:80'
  volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro

mosquitto:
  image: jllopis/mosquitto:v1.4.8
  hostname: mosquitto
  ports:
    - '1883:1883'
    - '9883:9883'

spatialconnect-node:
  build: .
  command: npm start
  ports:
    - '3000:3000'
  links:
    - zookeeper
    - kafka
    - schema-registry
    - postgres
    - nginx
  environment:
    - PGHOST=postgres
    - PGUSER=postgres
    - PGDATABASE=postgres
    - VIRTUAL_HOST=efc.boundlessgeo.com
